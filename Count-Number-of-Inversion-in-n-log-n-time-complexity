# Count-Number-of-Inversion-in-n-log-n-time-complexity
a=[0]

## Reading Large input
text_file = open("C:\Users\IntegerArray.txt", "r")
lines = text_file.readlines()
alist=[]
for ch in lines:
    alist.append(int(ch.strip("\n")))
    
## Actual Code

def merge_count(alist):
    if (len(alist)>1):
        mid = (len(alist))//2
        left,right=alist[:mid],alist[mid:]
        merge_count(left)
        merge_count(right)
        i,j,k= 0,0,0
        while i < len(left) and j < len(right):
            if (left[i]<right[j]):
                alist[k]=left[i]
                i += 1
            else:
                alist[k]=right[j]
                j += 1
                a[0] += len(left)-i
            k += 1
        while i < len(left):
            alist[k] = left [i]
            k,i=k+1,i+1
        while j < len(right):
            alist[k] = right[j]
            k,j = k+1,j+1
        
merge_count(alist)
print ('count',a[0])
            
